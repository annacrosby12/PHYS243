# -*- coding: utf-8 -*-
"""PHYS 243 Homework #1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dBFrWxGgn-kTf9Cuap6ET4sHa1egNXdu
"""

def Fib_rec(n=0):

     if n==0:

         return 1

     elif n==1:

         return 1

     else:

         return Fib_rec(n-1)+Fib_rec(n-2)
      
Fib_rec(n=4) # showing value so that I can check if the for loop output corresponds with this function.

#Part 1: For Loop

def Fib_rec2(n=0):
     
  for i in range(0,n):
    return (n-1) + (n-2)
  
Fib_rec2(4) # checking that output corresponds with recursive function. It does.

"""Part 2

The recursive function must evaluate if the input is 1) ==0, 2) ==1, or 3) another value. Then it must perform the calculation and print the output. The for loop already has conditions for 0 and 1 and then runs "for i" portion for final output, making it the faster function.
"""



# Part 3: average time function
# First function (timer) is for recursive function, second (timer2) is for the for loop

import time

def timer (n, k, f = Fib_rec):  # for recursive function
  for i in range(k): f()
  x = time.time()
  f(n)
  y = time.time()
  average_time = (y - x)/k
  
  return average_time

timer(1,5,f=Fib_rec)
  
  # 1,5 9.5367e-08
  # 2,5 2.8610e-07
  # 3,5 5.2452e-07
  # 4,5 5.7220e-07
  # 5,5 9.5367e-07
  # 6,5 1.6689e-06
  # 10,5 8.8691
  # 20,5 .00099
  # 30,5 0.1148

def timer2 (n, k, f2=Fib_rec2): # for for loop
  
  x2 = time.time()
  f2(n)
  y2 = time.time()
  average_time2 = (y2 - x2)/k
  
  return average_time2

timer2(1,5,f2 = Fib_rec2)

# 1,5 7.1526e-07
# 2,5 6.1989e-07
# 3,5 4.7684e-07
# 4,5 5.2452e-07
# 5,5 6.1989e-07
# 6,5 7.1526e-07
# 10,5 5.722e-07
# 20,5 7.6294e-07
# 30,5 6.6757e-07

import matplotlib.pyplot as plt 

x = [1,2,3,4,5,6,10,20]
y = [9.5367e-08, 2.8610e-07, 5.2452e-07, 5.7220e-07, 9.5367e-07, 1.6689e-06, 8.8691e-05, .00099] #recursive, blue color
y2 = [7.1526e-07, 6.1989e-07, 4.7684e-07, 5.2452e-07, 6.1989e-07, 7.1526e-07, 5.722e-07, 7.6294e-07] #for loop, orange color4

plt.plot(x, y)
plt.plot(x, y2)